"""add UniqueConstraint for user_role

Revision ID: 245a9787de05
Revises: e9a38419d7b3
Create Date: 2025-05-28 11:46:28.921668

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "245a9787de05"
down_revision: Union[str, None] = "e9a38419d7b3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "roles",
        "role_id",
        existing_type=sa.INTEGER(),
        type_=sa.SmallInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('roles_role_id_seq'::regclass)"),
    )
    op.alter_column(
        "user_roles",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.SmallInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.create_unique_constraint(
        "uq_user_roles_user_id_role_id", "user_roles", ["user_id", "role_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_user_roles_user_id_role_id", "user_roles", type_="unique")
    op.alter_column(
        "user_roles",
        "id",
        existing_type=sa.SmallInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "roles",
        "role_id",
        existing_type=sa.SmallInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('roles_role_id_seq'::regclass)"),
    )
    # ### end Alembic commands ###
