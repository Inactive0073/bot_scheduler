"""Change expire_date column

Revision ID: e9a38419d7b3
Revises: 60aab29409eb
Create Date: 2025-05-22 14:56:17.535533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e9a38419d7b3'
down_revision: Union[str, None] = '60aab29409eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("UPDATE bonuses SET expire_date = NOW() WHERE expire_date IS NULL")
    op.alter_column('bonuses', 'expire_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.create_unique_constraint('uq_bonuses_id', 'bonuses', ['id'])
    op.create_unique_constraint('uq_customers_telegram_id', 'customers', ['telegram_id'])
    op.create_unique_constraint('uq_schedule_posts_schedule_id', 'schedule_posts', ['schedule_id'])
    op.create_unique_constraint('uq_users_telegram_id', 'users', ['telegram_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_users_telegram_id', 'users', type_='unique')
    op.drop_constraint('uq_schedule_posts_schedule_id', 'schedule_posts', type_='unique')
    op.drop_constraint('uq_customers_telegram_id', 'customers', type_='unique')
    op.drop_constraint('uq_bonuses_id', 'bonuses', type_='unique')
    op.alter_column('bonuses', 'expire_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###
