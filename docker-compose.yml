services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - nats
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - app_network

  nats:
    image: nats:2.10
    entrypoint: /nats-server # Команда запуска внутри контейнера
    command: "-c /config/server.conf"
    ports:
      - "4222:4222"  # Основной порт для взаимодействия с сервером
      - "8222:8222"  # Порт для мониторинга сервера по HTTP (понадобится позже)
    volumes:
      - ./nats/data:/data  # Путь, по которому NATS-сервер будет хранить данные вне контейнера
      - ./nats/config/server.conf:/config/server.conf
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "5"
    networks:
      - app_network
  
  nats-ui:
    image: ghcr.io/nats-nui/nui:latest
    container_name: nats-nui
    ports:
      - "31311:31311" # Порты для доступа к NATS NUI
    volumes:
      - ./nui/db:/db
    depends_on:
      - nats
    networks:
      - app_network

  postgres:
    image: postgres:17-alpine
    env_file: .env
    restart: "on-failure"  # перезапуск во время ошибок
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:5432:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "10"
        compress: "true"
    networks:
      - app_network
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

  pgadmin:
    image: dpage/pgadmin4:9
    restart: "on-failure"
    env_file: .env
    ports:
      - "127.0.0.1:8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - "pgadmin-data:/var/lib/pgadmin"
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
        max-file: "5"
    networks:
      - app_network

  taskiq_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["taskiq", "worker", "app.taskiq_broker.broker:broker", "-fsd", "--workers=1", "--max-fails=5"]
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - nats
    networks:
      - app_network

  taskiq_scheduler:
    build: .
    command: ["taskiq", "scheduler", "app.taskiq_broker.broker:scheduler", "-fsd"]
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - taskiq_worker
    networks:
      - app_network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app_network:
    name: app_network